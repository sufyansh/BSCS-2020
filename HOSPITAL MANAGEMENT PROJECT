#include<iostream>
#include<windows.h>
#include<conio.h>
#include<fstream>
#include<cstring>
#include<cstdio>
#include<cstdlib>
#include<iomanip>
using namespace std;
//global variable declaration
int k=7,r=0,flag=0;
COORD coord = {0, 0};

void gotoxy(int x, int y)
{
    COORD coord;
    coord.X = x;
    coord.Y = y;
    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), coord);
}
struct date
{
    int mm,dd,yy;
};

ofstream fout;
ifstream fin;

class Patient
{
    int pateint_id;
    char pateint_name[25];
    int age;
    char gender[10];
    date d;
public:
    void add()
    {
        cout<<"\n\n                    Patient Number :  ";
        cin>>pateint_id;
        cout<<"\n\n                    Patient Name : ";
        cin>>pateint_name;
        cout<<"\n\n                    Gender ";
        cin>>gender;
        cout<<"\n\n                    Patient Age";
        cin>>age;
//gets(name);
        cout<<"\n\n                    Date(dd-mm-yy): ";
        cin>>d.mm>>d.dd>>d.yy;
    }
    void show()
    {
        cout<<"\n\n\t  Patient Number: ";
        cout<<pateint_id;
        cout<<"\n\n\t  Patient Name: ";
        cout<<pateint_name;
        cout<<"\n\n\t  Patient Age :";
        cout<<age;
        cout<<"\n\n\t  Gender :";
        cout<<gender;
        cout<<"\n\n\t  Date : ";
        cout<<d.mm<<"-"<<d.dd<<"-"<<d.yy;
    }
     void report()
    {
        gotoxy(4,4);
        cout<<pateint_id;
        gotoxy(4,5);
        puts(pateint_name);
        gotoxy(4,6);
        cout<<age;
        gotoxy(4,7);
        cout<<gender;
    }
    int retno()
    {
        return(pateint_id);

    }

};

class amount: public Patient
{
    float price,qty,tax,gross,dis,netamt,dispry;
public:
    void add();
    void show();
    void report();
    void calculate();
    void pay();
    float retnetamt()
    {
        return(netamt);
    }
} amt;

void amount::add()
{
    Patient::add();
    cout<<"\n\n               Doctor Charges: ";
    cin>>price;
    cout<<"\n\n               Dispensary Charges :";
    cin>>dispry;
    cout<<"\n\n               Blood Pressure Check Fee: ";
    cin>>qty;
    cout<<"\n\n               Sugar Check Charges : ";
    cin>>tax;
    cout<<"\n\n               Discount percent: ";
    cin>>dis;
    calculate();
    fout.write((char *)&amt,sizeof(amt));
    fout.close();
}
void amount::calculate()
{
    gross=(price+qty +tax +dispry);
    netamt=(gross-(dis/100));
}
void amount::show()

{
    fin.open("itemstore.dat",ios::binary);
    fin.read((char*)&amt,sizeof(amt));
    Patient::show();
    cout<<"\n\n\t   Net amount: ";
    cout<<netamt;
    fin.close();
}
void amount::report()
{
    Patient::report();
    gotoxy(4,4);
    cout<<price;
    gotoxy(4,5);
    cout<<qty;
    gotoxy(4,6);
    cout<<tax;
    gotoxy(4,7);
    cout<<dispry;
    gotoxy(4,8);
    cout<<dis;
    gotoxy(4,9);
    cout<<netamt;
    k=k+1;
    if(k==50)
    {
        gotoxy(25,50);
        cout<<"PRESS ANY KEY TO CONTINUE...";
        getch();
        k=7;
        system("cls");
        gotoxy(30,3);
        cout<<" Patient DETAILS ";
        gotoxy(3,5);
        cout<<"NUMBER";
        gotoxy(13,5);
        cout<<"NAME";
        gotoxy(23,5);
        cout<<"Doctor Fee";
        gotoxy(33,5);
        cout<<"Blood Pressure Check Fee";
        gotoxy(44,5);
        cout<<"Sugar Check Fee";
        gotoxy(52,5);
        cout<<"DEDUCTION";
        gotoxy(64,5);
        cout<<"NET AMOUNT";
    }
}

void amount::pay()
{
    //show();
    cout<<"\n\n\n\t\t*********************************************";
    cout<<"\n\t\t                 DETAILS                  ";
    cout<<"\n\t\t*********************************************";
    cout<<"\n\n\t  Doctor Fee                     :"<<price;
    cout<<"\n\n\t  Dispensary Fee                 :"<<dispry;
    cout<<"\n\n\t  Blood Pressure Check Fee       :"<<qty;
    cout<<"\n\n\t  Sugar Check Fee                :"<<tax;
    cout<<"\n\n\t  DISCOUNT PERCENTAGE            :"<<dis;
    cout<<"\n\n\t  NET AMOUNT                     :Rs."<<netamt;

}

int main()
{
    cout.setf(ios::fixed);
    cout.setf(ios::showpoint);
    cout<<setprecision(2);
    fstream tmp("temp.dat",ios::binary|ios::out);
menu:
    system("cls");
    cout<<"==============================================================================\n\n";
    cout<<"********************G.J Hospital Management***********************************\n\n";
    cout<<"==============================================================================\n\n";
    cout<<"\n\t\t******1.Bill Report******\n\n";
    cout<<"\t\t******2.Add New Patient/Renew Patient / Delete Patient Detail****\n\n";
    cout<<"\t\t******3.Show All Patient Details******\n\n";
    cout<<"\t\t******4.Exit*****\n\n";
    cout<<"\t\tPlease Enter Required Option: ";
    int ch,ff;
    cin>>ch;
    switch(ch)
    {
    case 1:
ss:
        system("cls");
        gotoxy(25,2);
        cout<<"*****************Bill Details***************";
        gotoxy(25,3);
        cout<<"================\n\n";
        cout<<"\n\t\t******1.All Details******\n\n";
        cout<<"\t\t******2.Back to Main menu******\n\n";
        cout<<"\t\t******Please Enter Required Option******: ";
        int cho;
        cin>>cho;
        if(cho==1)
        {
            system("cls");
            cout<<"\n\n\t\t*****************************************************************";
            cout<<"\n\t\t*********************Bill Details**********************************";
            cout<<"\n\t\t*******************************************************************";
            //amt.show();
            //gotoxy(5,5);
            amt.pay();
            //cout<<"Patient Number :";
            //gotoxy(5,7);
            //cout<<"Patient NAME :";
            //gotoxy(5,9);
            //cout<<"Doctor Fee :";
            //gotoxy(5,11);
            //cout<<"Blood Pressure Charges :";
            //gotoxy(5,13);
            //cout<<"Sugar Test charges :";
            //gotoxy(5,15);
            //cout<<"Dispensary Charges :";
            //gotoxy(5,17);
            //cout<<"DISCOUNT % :";
            //gotoxy(5,19);
            //cout<<"NET AMOUNT :";
            //cout<<"*******************************************************************";
            fin.open("itemstore.dat",ios::binary);
            if(!fin)
            {
                cout<<"\n\nFile Not Found...";
                goto menu;
            }
            fin.seekg(0);
           float gtotal=0;
            while(!fin.eof())
            {
                fin.read((char*)&amt,sizeof(amt));
                if(!fin.eof())
                {
                    gtotal=amt.retnetamt();
                    ff=0;
                }
                if(ff!=0) gtotal=0;
            }
            //gotoxy(40,20);
            cout<<"\n\n\t\tGrand Total="<<gtotal;
            getch();
            fin.close();
        }
        if(cho==2)
        {
            goto menu;
        }
        goto ss;
    case 2:
db:
        system("cls");
        cout<<"=========================================================\n\n";
        cout<<"*******************Bill Editor**************************\n\n";
        cout<<"========================================================\n\n";
        cout<<"\n\t\t******1.Add New Patient******\n\n";
        cout<<"\n\t\t******2.Edit Patient Details******\n\n";
        cout<<"\t\t******3.Delete Patient Details******\n\n";
        cout<<"\t\t******4.Back to Main Menu****** ";
        int apc;
        cin>>apc;
        switch(apc)
        {
        case 1:
            fout.open("itemstore.dat",ios::binary|ios::app);
            amt.add();
            cout<<"\n\t\tPatient Added Successfully!";
            getch();
            goto db;

        case 2:
            int ino;
            flag=0;
            cout<<"\n\n\tEnter Patient Number to be Edited :";
            cin>>ino;
            fin.open("itemstore.dat",ios::binary);
            fout.open("itemstore.dat",ios::binary|ios::app);
            if(!fin)
            {
                cout<<"\n\nFile Not Found...";
                goto menu;
            }
            fin.seekg(0);
            r=0;
            while(!fin.eof())
            {
                fin.read((char*)&amt,sizeof(amt));
                if(!fin.eof())
                {
                    int x=amt.retno();
                    if(x==ino)
                    {
                        flag=1;
                        fout.seekp(r*sizeof(amt));
                        system("cls");
                        cout<<"\n\t\tCurrent Details are\n";
                        amt.show();
                        cout<<"\n\n\t\tEnter New Details\n";
                        amt.add();
                        cout<<"\n\t\tPatient Details Edited";
                    }
                }
                r++;
            }
            if(flag==0)
            {
                cout<<"\n\t\tPatient No does not exist...Please Retry!";
                getch();
                goto db;
            }
            fin.close();
            getch();
            goto db;

        case 3:
            flag =0;
            cout<<"\n\nm Enter Item Number To Be Deleted :";
            cin>>ino;
            fin.open("itemstore.dat",ios::binary);
            if(!fin)
            {
                cout<<"\n\n File Not Found ";
                goto menu;
            }
            fin.seekg(0);
            while(fin.read((char*)&amt,sizeof(amt)))
            {
                int x= amt.Patient::retno();
                if(x!=ino)
                    tmp.write((char*)&amt,sizeof(amt));
                else
                {
                    flag = 1;
                }
            }
            fin.close();
            tmp.close();
           fout.open("itemstore.dat",ios::trunc | ios::binary);
           fout.seekp(0);
           tmp.open("temp.dat",ios::binary | ios::in);
           if(!tmp)
           {
               cout<<"Error In file ";
               goto db;
           }
           while(tmp.read((char*)&amt,sizeof(amt)))
               fout.write((char*)&amt,sizeof(amt));
               tmp.close();
               fout.close();
               if (flag == 1 )
               cout<<"\n\t Item Successfully Deleted ";
               else if (flag==0)
                cout<<"\n\t Item Does Not Exit   Please Retry";
               getch();
               goto db;
        case 4:
            goto  menu;
        default:
            cout<<"\n\n\t Wrong Choice !!!Retry ";
            getch();
            goto db ;
           }
        case 3:
            system("cls");
            flag =0;
            int ino;
            cout<<"\n\n\t Enter Item Number ";
            cin>>ino;
            fin.open("itemstore.dat",ios::binary);
            if(!fin)
            {
                cout<<"\n\n File Not Found ........ \n Program Terminated ";
                goto menu;
            }
             fin.seekg(0);
             while(fin.read((char*)&amt,sizeof(amt)))
             {
                 int x = amt.retno();
                 if ( x== ino)
                 {
                     amt.show();
                     amt.pay();
                     flag =1;
                     break;
                 }
             }
            if(flag==0)
                cout<<"\n\t Item Does Not Exist ........... Please Retry ";
            getch();
            fin.close();
            goto menu;
        case 4:
            system("cls");
            gotoxy(10,20);
            cout<< "Are You Sure You want To Exist (Y/N)";
            char yn;
            cin>>yn;
            if((yn=='Y')||(yn=='y'))
            {
                gotoxy(12,20);
                system("cls");
                cout<<"******* THANKS ******";
                getch();
                exit(0);
            }
                else if((yn=='N')||(yn=='n'))
                    goto menu ;
                else
                {
                    goto menu;
                }
                default:
                cout<<"\n\n\t Wrong Choice ............Please Retry";
                getch();
                goto menu;

        }
        return 0;
    }
